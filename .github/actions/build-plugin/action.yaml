name: 'Set up and build plugin'
description: 'Builds the plugin for specified architecture and build config'
inputs:
  target:
    description: 'Target architecture for dependencies'
    required: true
  config:
    description: 'Build configuration'
    required: false
    default: 'RelWithDebInfo'
  workingDirectory:
    description: 'Working directory for packaging'
    required: false
    default: ${{ github.workspace }}
runs:
  using: composite
  steps:
    - name: Run Windows Build
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        # Run Windows Build
        if ( $Env:RUNNER_DEBUG -ne $null ) {
          Set-PSDebug -Trace 1
        }

        $BuildArgs = @{
          Target = '${{ inputs.target }}'
          Configuration = '${{ inputs.config }}'
        }

        .github/scripts/Build-Windows.ps1 @BuildArgs

    - name: Create Summary ðŸ“Š
      if: contains(fromJSON('["Linux", "macOS"]'),runner.os)
      shell: zsh --no-rcs --errexit --pipefail {0}
      env:
        CCACHE_CONFIGPATH: ${{ inputs.workingDirectory }}/.ccache.conf
      run: |
        : Create Summary ðŸ“Š

        local -a ccache_data
        if (( ${+RUNNER_DEBUG} )) {
          setopt XTRACE
          ccache_data=("${(fA)$(ccache -s -vv)}")
        } else {
          ccache_data=("${(fA)$(ccache -s)}")
        }

        print '### ${{ runner.os }} Ccache Stats (${{ inputs.target }})' >> $GITHUB_STEP_SUMMARY
        print '```' >> $GITHUB_STEP_SUMMARY
        for line (${ccache_data}) {
          print ${line} >> $GITHUB_STEP_SUMMARY
        }
        print '```' >> $GITHUB_STEP_SUMMARY
